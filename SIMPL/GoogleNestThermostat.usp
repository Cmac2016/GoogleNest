#SYMBOL_NAME "Google Nest Thermostat"

#INCLUDEPATH "C:\\Users\\mathew.klucznyk\\OneDrive - Global USS\\Crestron Modules\\Mat\\SIMPLSharp Projects\\GoogleNest\\GoogleNest\\GoogleNest\\bin\\Debug"
#USER_SIMPLSHARP_LIBRARY "GoogleNest"

digital_input GetDevice;

digital_output IsOnline, FanIsOn, IsEcoMode, IsCelsius, IsFahreniheit;
analog_output HumidityPercentage, CurrentMode, CurrentEcoMode, CurrentEcoHeatSetPoint, CurrentEcoCoolSetPoint, CurrentSetPoint, CurrentTemperature;
string_output CurrentTemperatureString, RoomName;

string_parameter _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, _skip_, DeviceName[65534];

GoogleNestThermostat thermostat;

push GetDevice
{
    thermostat.GetDevice();
}

callback function newOnline(integer args)
{
    IsOnline = args;
}

callback function newFanState(integer args)
{
    FanIsOn = args;
}

callback function newCurrentTemperature(integer value, string sValue)
{
    CurrentTemperature = value;
    CurrentTemperatureString = sValue;
}

callback function newEcoModeState(string args)
{
    if(args = "OFF")
    {
        CurrentEcoMode = 0;
    }
    if(args = "MANUAL_ECO")
    {
        CurrentEcoMode = 1;
    }
}

callback function newTemperatureMode(string args)
{
    if(args = "CELSIUS")
    {
        IsCelsius = ON;
        IsFahreniheit = OFF;
    }
    else if(args = "FAHRENIHEIT")
    {
        IsCelsius = OFF;
        IsFahreniheit = ON;
    }
}

callback function newHumidity(integer args)
{ 
	HumidityPercentage = args;
}

callback function newCurrentMode(string args)
{
    if(args = "HEAT")
    {
        CurrentMode = 1;
    }
    else if(args = "COOL")
    {
        CurrentMode = 2;
    }
    else if(args = "HEATCOOL")
    {
        CurrentMode = 3;
    }
    else if(args = "OFF")
    {
        CurrentMode = 0;
    }
}

callback function newEcoHeatSetPoint(integer args)
{
    CurrentEcoHeatSetPoint = args;
}

callback function newEcoCoolSetPoint(integer args)
{
    CurrentEcoCoolSetPoint = args;
} 

callback function newCurrentSetPoint(integer args)
{
    CurrentSetPoint = args;
}

callback function newRoomName(string name)
{
    RoomName = name;
}

function Main()
{
    RegisterDelegate(thermostat, onOnline, newOnline);
    RegisterDelegate(thermostat, onFanState,  newFanState);
    RegisterDelegate(thermostat, onCurrentTemperature, newCurrentTemperature);
    RegisterDelegate(thermostat, onEcoModeState, newEcoModeState);
    RegisterDelegate(thermostat, onTemperatureMode, newTemperatureMode);
    RegisterDelegate(thermostat, onHumidity, newHumidity);
    RegisterDelegate(thermostat, onCurrentMode, newCurrentMode);
    RegisterDelegate(thermostat, onEcoHeatSetPoint, newEcoHeatSetPoint);
    RegisterDelegate(thermostat, onEcoCoolSetPoint, newEcoCoolSetPoint);
    RegisterDelegate(thermostat, onCurrentSetPoint, newCurrentSetPoint);
    RegisterDelegate(thermostat, onRoomName, newRoomName);
    
    thermostat.Initialize(DeviceName);
}
